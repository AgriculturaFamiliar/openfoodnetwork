= component_controller(class: "products-table") do
  .products-table-form
    .products-table-form_filter_results
      = render(SearchInputComponent.new(value: @search_term, data: reflex_data_attributes(:search_term)))
    .products-table-form_categories_selector
      = render(SelectorWithFilterComponent.new(title: t("admin.products_page.filters.categories.title"), selected: @categories_selected, items: @categories, data: reflex_data_attributes(:toggle_category), selected_items_i18n_key: "admin.products_page.filters.categories.selected_categories"))
    .products-table-form_producers_selector
      = render(SelectorWithFilterComponent.new(title: t("admin.products_page.filters.producers.title"), selected: @producers_selected, items: @producers, data: reflex_data_attributes(:toggle_producer), selected_items_i18n_key: "admin.products_page.filters.producers.selected_producers"))
    .products-table-form_per-page_selector
      = render(SelectorComponent.new(title: t('admin.products_page.filters.per_page', count: @per_page_selected[0]), selected: @per_page_selected, items: @per_page, data: reflex_data_attributes(:toggle_per_page)))
    .products-table-form_columns_selector
      = render(SelectorComponent.new(title: t("admin.products_page.filters.columns"), selected: @columns_selected, items: @selectable_columns, data: reflex_data_attributes(:toggle_column)))

  .products-table_table
    %table
      = render(TableHeaderComponent.new(columns: @columns, sort: @sort, data: reflex_data_attributes(:click_sort)))
      %tbody
        = render(ProductComponent.with_collection(@products, columns: @columns))

  .products-table-form_pagination
    = render(PaginationComponent.new(pagy: @pagy, data: reflex_data_attributes(:change_page)))
